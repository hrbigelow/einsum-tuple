{
  "test1" : {
    "constraints": [
      "RANK(coord) < 5",
      "RANK(coord) <= 5",
      "RANK(batch) == 5",
      "RANK(slice) > 0",
      "RANK(slice) >= 0",
      "DIMS(coord)[0] == RANK(elem)",
      "DIMS(slice)[:] < DIMS(fslice)[:]"
    ],
    "statements": [
      "input[b,s,i] = RANDOM(0, 10, FLOAT)",
      "filter[f,i,o] = RANDOM(0, 10, FLOAT)",
      "ind[s,f,c] = RANGE[s,c] - RANGE[f,c] + DIMS(f)[c] // 2",
      "tmp[b,s,f,o] = input[b,s,i] * filter[f,i,o]",
      "result[b,s,ind[s,f,:],o] = tmp[b,s,f,o]"
    ],
    "rank": {
      "b": 3,
      "s": 2,
      "f": 2,
      "i": 1,
      "o": 1,
      "c": 1
    }
  },
  "test2": {
    "statements": [
      "mata[batch,row,inner] = RANDOM(0, 10, FLOAT)",
      "matb[batch,inner,col] = RANDOM(0, 10, FLOAT)",
      "result[batch,row,col] = mata[batch,row,inner] * matb[batch,inner,col]"
    ],
    "rank": {
      "batch": 3,
      "row": 1,
      "col": 1,
      "inner": 1
    }
  },
  "gather": {
    "statements": [
      "params[batch,elem,other] = RANDOM(0, 10, FLOAT)",
      "indices[batch,slice,coord] = RANDOM(0, 100, INT)",
      "result[batch,slice,other] = params[batch,indices[batch,slice,:],other]"
    ],
    "rank": {
      "batch": 1,
      "elem": 2,
      "other": 1,
      "slice": 1,
      "coord": 1
    }
  }
}

